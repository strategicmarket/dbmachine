Wednesday
----------------

PRIORITIES TODAY

1. TEST WEBMACHINE

2. GET MESSAGE WORKING

3. PLAN FOR WORKSHOP


--------------------

Think About

API FIRST WEBSITE
https://medium.freecodecamp.org/how-to-use-api-first-platforms-to-build-your-websites-faster-e917e8318ee

JSON OBJECTS FROM CMS POWERING BOT CONVERSATIONS
https://hackernoon.com/building-a-blog-with-react-and-contentful-fd538f68f6fb

LOOK AT MOUTIN FOR ECOMMERCE? PAY FOR NETWORK AND GO

delivery pipleine

- code.xyz and one button deploy

-network to slack to agent to invites

- contentful.com netlify, cloudinary 

https://the-example-app-nodejs.contentful.com/

https://www.contentful.com/blog/2018/05/09/building-portfolio-website-contentful-nextjs-netlify/

composable entries
https://www.contentful.com/blog/2018/04/25/get-up-to-speed-on-composable-entries/

build to ship
https://www.contentful.com/blog/2018/04/09/foolproof-guide-getting-started-contentful/

Gatsby, Netlify, Contentful

https://www.gatsbyjs.org/blog/2018-04-11-trying-out-gatsby-at-work-and-co/

https://www.contentful.com/blog/2018/04/13/dynamic-static-sites-implementing-an-oxymoron/

https://www.npmjs.com/package/contentful

bots
https://github.com/DoSomething/gambit-conversations

https://github.com/remedyhealth/contentpull

-------------

PRIORITIES

0 bulma templates
https://dansup.github.io/bulma-templates/templates/admin.html#

1. gatsby blog >? or vue src? or both?

2. webmachine review

4. pull out db server -- rationalize with webmachine -- 

5 update the messaging constructor -- next set of function -- look to structure in the individual folders etc --- -- 

need to somehow to drive README md docks off each function as well --- make it really compact

6 . need to ping the aws lamda from alex as well

7. payments to juan and daniel

------

explore ....

https://ai.intel.com/introducing-nlp-architect-by-intel-ai-lab/

https://github.com/NervanaSystems/nlp-architect

-----

npm convict -- handle configurations and inserting env as well
https://www.npmjs.com/package/convict


------

organize and share code for microservices using bit

https://blog.bitsrc.io/how-we-successfully-share-and-reuse-code-between-microservices-at-scale-20fcfaebc6d0

https://bitsrc.io/

-----

REALLY COMPETITIVE STUFF -- LOOK AT THIS

https://blog.bitsrc.io/build-your-own-blog-using-gatsby-and-react-a1255a5ab086

use markdown to create blog entries -- 

-------

corpus of texts for nlp training
https://www.npmjs.com/package/nlp-corpus

-------

TAGUI  RPA
https://github.com/kelaberetiv/TagUI

-------------
stopword -- just strips out words from a text

https://www.npmjs.com/package/stopword

-------------

compromise? - very fast nlp
https://github.com/spencermountain/compromise

http://compromise.cool/

-------


using redis with nodejs
http://thisdavej.com/guides/redis-node/

https://www.objectrocket.com/blog/how-to/introduction-to-redis-sentinel/


-------------


https://moltin.com/

checkout moltin and a bot

https://github.com/pveller/ecommerce-chatbot

Login into the moltin dev site and deploy a store ,,,,

-----

PATTERNS

 - how do we pull in 'scripts for bots' --- or maybe --- how to break up the constructor into individual methods 

https://github.com/IBM/bots/tree/master/bots

- check and require
https://github.com/IBM/personal-wealth-portfolio-mgt-bot/blob/master/server.js

-- chron and slack
https://github.com/gulzar1996/auto-like-my-gf-insta-pic

-- es6 pattern -- check this out
https://github.com/snyk/oompa


--------


1, check out code paterns in ibm repo

strategy/workflow diagram
microservices/ibm code patterns

-----

monitor node apps 
https://github.com/IBM/node-ibmapm

----

2. integrate and test message with micromachine

3. integrate and test message with openwhisk -- sm_banter?

5. begin to build out additional functions for message object

6. REFACTOR scriptxio -- many points of update needed

7. create a test generator server --- so it can load test data on start and operate its own process as an api endpoint  -- may be a simple server that simply seeds the test database --- use process.argv -- and points to .env file for source db

.devshared - .env file with endpoints
.testshared - env file with endpoints
.devlocal

8 update readme for message constructor -- more info on methods etc

-----------------

- workorder to Treasan -- microservice?

- could also use workorders for slack bots?

----

explore this architecture MONDAY -- WATSON WORKSPACE
https://github.com/van-ibm/watsonworkspace-sdk

https://github.com/van-ibm/watsonworkspace-bot

https://github.com/van-ibm/watsonworkspace-bot

---
DOCS

checkout
https://vuepress.vuejs.org/guide/
----

checkout
http://www.data-forge-js.com/
----

read - github slack integrations
https://blog.github.com/2018-05-17-new-improvements-to-slack-and-github-integration/
----
build a tool chain and semver strategy
https://nodesource.com/blog/understanding-how-node-js-release-lines-work
---
 be thinking about the integration with slack -- 'intelligent network' -- hit my phone number but everything routed to slack? messages returned to designated channel -- turn on proxy

--
creating mircoapps

definitely explore
https://docs.microlink.io/sdk/
------------------
research

1. buy a twilio number via api
https://support.twilio.com/hc/en-us/articles/223182728-Using-the-REST-API-to-Search-for-and-Buy-Twilio-Phone-Numbers

https://medium.com/tfogo/finding-prime-phone-numbers-on-twilio-7adc42337147

2. masked phone number
https://www.twilio.com/docs/sms/tutorials/masked-numbers-node-express

3. vscode
https://chatbotsmagazine.com/botkit-visual-studio-code-3252800048ba

---------------

> *** need a solution - rapid fire texting before agent responds creates a condition of two live 'new interactions' --- triggers a platform error

maybe write a 'notation to memory' or REDIS? and respond -- please wait -- i can;t think that fast' -- or something like that

> something other than guest? Or have microservices insert a comment when Guest noted

> record processing fails and last interaction is recorded with a status of isTerminated -- how is this being handled?

> enable web widget to take hot links

> microservice terminates a transactions -- how will this be handled by platform

---------------

> PLUGINS -- the secret --- before and after -- someone selects agents and records when they want it to execute? -- ie api vs pre vs post    --- do a map then a promise.all  

-- then set status and responses  YES!

> **** comb through code and REFACTOR various parts

vs code can do that
https://vscodecandothat.com/

------------------

creating landing page with serverless components --
https://serverless.com/blog/how-to-create-landing-page-with-serverless-components/

------------

netlify site
https://strategicmachines.netlify.com/index.html

-------------
test travis - Private Repos now supported

https://blog.travis-ci.com/2018-05-02-open-source-projects-on-travis-ci-com-with-github-apps?utm_source=Twitter&utm_campaign=2may_release

---------

serverless components
https://serverless.com/blog/what-are-serverless-components-how-use/

This is the heart of our machine. Each machine stamps out an agent -- capable of doing whatever set of skills it has been given, These skills are functions -- the microservices fire the functions in response to some intent -- some registered event -- some trigger

----------
check out site for static docs -- github generated
https://vuepress.vuejs.org/guide/

-------------

use this as the foundation for the testing process for new junior developers

build an app
push to github 

https://github.com/tuvtran/project-based-learning

-------
implement helmet to protect microservices
https://nodesource.com/blog/nine-security-tips-to-keep-express-from-getting-pwned/
ple
---------------

think about
https://workshop.me/

workshop training etc ---- publishing on medium

------------

explore
https://www.ibm.com/watson/services/discovery/

--------------
explore aws amplify
https://github.com/aws/aws-amplify
-------------


4 **** need to confirm that for every intent in classifier we have a defined agent? -- complex

use recipes -- also handle in microservice -- received  classifier.top_class not part of switch case
-------

Apple Business Chat
https://inthechat.com/
https://www.nuance.com/index.html
https://www.nuance.com/omni-channel-customer-engagement/digital/virtual-assistant/nina.html




study the config.json layout here -- 2fa app
https://github.com/nodecraft/2fa-2-slack

https://github.com/Esri/sonar

ALSO EXPLORE
https://www.npmjs.com/package/needle
import of twilio functions explore
https://github.com/ibmets/crisis-hack-server
how to conduct a workshop
https://github.com/ibmets/emerging-technology-workshops

---

chat to vote
https://www.hello.vote/
https://github.com/fightforthefuture/votebot-api

event registration
https://github.com/edshee/event-registration

---
federalist - static website generator
https://github.com/18F/federalist

------------------------

6. Use case development -- for the agent gallery
> shopify integrations?
> web site integrations (product, catalogues, ama, faq)
> metrics and analytics
> multistep demonstrations --- especially with member knowledge
> enhance the selltoys, banter, etc virtual agents -- next rev update
> update member data with Juan, Daniel etc
> begin to provide updates from strategic machines IVA about project
> send notifications?

-----------
14 TWILIO - spam filtering -- look up copilot

-------------

More thnking about mocking up examples micro apps

1. https://mxstbr.blog/2017/01/your-first-node-microservice/

2. https://zeit.co/blog/micro-8

-----------------

3. apply security to the server and microservice using helmet
https://nodesource.com/blog/nine-security-tips-to-keep-express-from-getting-pwned/

this includes infor on helmet -- and rate limiting per ip address

const limiter = require('express-limiter')(app, redisClient);

// Limit requests to 100 per hour per ip address.
limiter({
  lookup: ['connection.remoteAddress'],
  total: 100,
  expire: 1000 * 60 * 60
})

----------------
explore watson workspace bots

> see micorservices/agents/watson

-------------

screen and code share

https://medium.com/@compuives/introducing-codesandbox-live-real-time-code-collaboration-in-the-browser-6d508cfc70c9

------------

review this new beta
https://blog.dialogflow.com/post/fulfillment-library-beta/

----------
evaluate Socket Server as a solution to connections/mulittenant challenge ? and REDIS
https://github.com/hugmanrique/turbo-ws

-------------
check out plasso -- for creating membership acct and payments
https://plasso.com/

------------

note - be sure to inspect env variables for deployed strategicmachines app to be sure process.env variables properly set up

cf env machines   // logs env variables for vcap_application
cf  set-env PRODUCTION true    // sets env var to production

also - once i set an env variable i can do
cf restage machines   // restarts now with new env var in place -- so i can take an app offline with one commands and restage
-----
establish scale testing -- hook up messaging to redisio >> using droid?

-------
emitting to redis -- dashboard reporting -- ?   or set up as a demo? --- concurrent discussions in motion?
> do we subscribe here -- notification process? create an agent which pushes accordingly to email or sms??   

pub sub channels

NOW broadcasting live from ......

------------------------------
micro apps  -- serverless ecommerce and stripe and reactjs
https://github.com/patrick-michelberger/serverless-shop
http://patrick.michelberger.info/serverless-shop/
--------------

research more on web actions
https://console.bluemix.net/docs/openwhisk/openwhisk_webactions.html#openwhisk_webactions
> authenticated and rate limited
> as these skills get created how do we maintain the endpoints?

---------------

6 note -- encryption of databases etc


8 outline how we build in pricing for agents, (subscription, license) ... developer royalty -- greatest hits list among the developers -- coolest and baddest and most useful agents .. kind of stuff  -- a real market place to get work, show case work, and get rewards

9 need a meter --- everycustomer interaction -- but also what agents and skills where executed -- and skill id? -- can trace from agent to skill to dev (author) (enhance their digital reputation -- not only getting work done but authoriing popular skills -------)
--------------

what if agent points to a human?   -- logic for controlling text forward -- logic for handling snooze, busy etc

------------



